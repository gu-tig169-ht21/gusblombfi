
  /*  _checkItem2() {
    final List<CheckboxItem> checkboxList = [
      CheckboxItem('Write a book', false),
      CheckboxItem('Tidy room', false)
    ];
    return ListView.builder(
        /* itemCount: tasks.length, */
        itemBuilder: (context, index) {
      return CheckboxListTile(
          title: Text(checkboxList[index].text),
          value: checkboxList[index].value,
          onChanged: (bool? value) {
            setState(() {});
          });
    });
  }
 */
/* 
  _checkItem() {
    return Expanded(
      child: Column(
        children: tasks.keys.map(
          (taskItem) {
            return CheckboxListTile(
              title: Text(
                taskItem,
                style: taskItem. == true 
                ? const TextStyle(
                  fontSize: 22,
                  fontWeight: FontWeight.w300,
                  
                )
                :
              ),
              value: tasks[taskItem],
              secondary: IconButton(
                icon: const Icon(Icons.clear),
                onPressed: () {
                  setState(() {
                    print(taskItem);
/*  tasks.removeWhere((key, value) => value == tasks[taskItem]);*/
                  });
                },
              ),
              controlAffinity: ListTileControlAffinity.leading,
              onChanged: (bool? value) {
                setState(() {
                  tasks[taskItem] = value;
                });
              },
            );
          },
        ).toList(),
      ),
    );
  } */

  /* Widget _item(String name) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: <Widget>[
        Checkbox(
          value: isChecked,
          onChanged: (bool? value) {
            setState(() {
              isChecked = value!;
              pressed = !pressed;
            });
          },
        ),
        Expanded(
          child: Text(
            name,
            style: pressed
                ? const TextStyle(
                    fontSize: 26,
                    fontWeight: FontWeight.w400,
                    decoration: TextDecoration.lineThrough,
                  )
                : const TextStyle(fontSize: 26, fontWeight: FontWeight.w400),
          ),
        ),
        IconButton(
          onPressed: () {},
          icon: const Icon(Icons.clear),
        ),
      ],
    );
  } */


  /* class CheckboxItem {
  final String text;
  final bool value;

  CheckboxItem(this.text, this.value);
} */
